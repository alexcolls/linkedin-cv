[tool.poetry]
name = "linkedin-cv"
version = "0.5.2"
description = "Generate beautiful, professional PDF CVs from LinkedIn profiles"
authors = ["Alex Colls <alex@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/alexcolls/linkedin-cv"
repository = "https://github.com/alexcolls/linkedin-cv"
keywords = ["linkedin", "cv", "resume", "pdf", "scraper", "playwright", "weasyprint"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Topic :: Office/Business",
]

[tool.poetry.dependencies]
python = "^3.9"
playwright = "^1.40.0"
beautifulsoup4 = "^4.12.0"
lxml = "^5.0.0"
weasyprint = ">=62.0,<63.0"
pillow = "^10.0.0"
click = "^8.1.0"
rich = "^13.0.0"
requests = "^2.31.0"
jinja2 = "^3.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-asyncio = "^0.21.0"
black = "^23.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
isort = "^5.13.0"
pre-commit = "^3.5.0"
types-requests = "^2.31.0"
types-pillow = "^10.0.0"

[tool.poetry.scripts]
linkedin-cv = "src.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.pytest_cache
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["weasyprint.*", "playwright.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
